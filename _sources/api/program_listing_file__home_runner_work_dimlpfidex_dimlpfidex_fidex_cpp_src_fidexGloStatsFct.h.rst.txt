
.. _program_listing_file__home_runner_work_dimlpfidex_dimlpfidex_fidex_cpp_src_fidexGloStatsFct.h:

Program Listing for File fidexGloStatsFct.h
===========================================

|exhale_lsh| :ref:`Return to documentation for file <file__home_runner_work_dimlpfidex_dimlpfidex_fidex_cpp_src_fidexGloStatsFct.h>` (``/home/runner/work/dimlpfidex/dimlpfidex/fidex/cpp/src/fidexGloStatsFct.h``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   #ifndef FIDEXGLOSTATSFCT_H
   #define FIDEXGLOSTATSFCT_H
   
   #include "../../../common/cpp/src/dataSet.h"
   #include "../../../common/cpp/src/errorHandler.h"
   #include "../../../common/cpp/src/parameters.h"
   #include "../../../common/cpp/src/rule.h"
   #include <fstream>
   #include <iostream>
   #include <memory>
   #include <sstream>
   #include <time.h>
   #include <tuple>
   #include <unordered_map>
   #include <vector>
   
   void getCovering(std::vector<int> &sampleIds, const Rule &rule, std::vector<std::vector<double>> &testValues);
   
   void computeTFPN(int decision, int positiveClassIndex, int testTrueClass, int &nbTruePositive, int &nbFalsePositive, int &nbTrueNegative, int &nbFalseNegative);
   
   void showStatsParams();
   
   void checkStatsParametersLogicValues(Parameters &p);
   
   int fidexGloStats(const std::string &command = "");
   
   #endif // FIDEXGLOSTATSFCT_H
