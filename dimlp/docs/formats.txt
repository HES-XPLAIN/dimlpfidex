Contents
--------

This file describes formats of data sets,
file of weights, file of network responses,
and file of symbolic attributes. Note that
all files contain ASCII characters.


Data Sets (training, validation, testing)
-----------------------------------------

Each row corresponds to an instance followed
by target values. As an example, if we consider
a problem with 10 attributes and two target
values (for two classes) then each row represents

a_1 a_2 a_3 a_4 a_5 a_6 a_7 a_8 a_9 a_10 t_1 t_2

where a_i are attributes and t_i are target
values. Note that attributes can be binary,
discrete, and continuous valued.

You can also create 2 files, one with values and one with targets


Weight File (dimlp.wts)
-----------------------

Between two successive layers of neurons denoted
as l_i and l_(i+1) there is a weight matrix.

Odd rows of the file represent bias values of
neurons related to l_(i+1). Even rows are
values of the  weight matrix between l_i and
l_(i+1). As an example, assuming that l_i has
three neurons and that l_(i+1) has two neurons,
the related weight values are represented in a
single row as

w_11 w_21 w_31 w_12 w_22 w_32


Output File (dimlp.out and dimlpBT.out)
---------------------------------------

A row represents output layer activation values.
As an example, with three output neurons denoted
o_1, o_2, and o_3 each row is represented as

o_1 o_2 o_3


Rule File (dimlp.rls)
---------------------

This is simply an ASCII file with rules.


Attribute File
--------------

This file has #I + #O rows, where #I is the number
of inputs, and #O is the number of outputs. The first
#I rows correspond to the symbolic name of input
neurons, whereas the last #O rows are the symbolic
name of classes. As an example with 5 input neurons
and three classes we have:

symb_1
symb_2
symb_3
symb_4
symb_5
class_A
class_B
class_C

As a convention class_A, class_B, and class_C will represent
(1 0 0), (0 1 0), and (0 0 1) target values.

Be careful with attribute files. No checking of errors is done
before rule extraction !
