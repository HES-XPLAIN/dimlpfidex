
name: package

on:
  release:
    types:
      - published
#  workflow_dispatch:
#  push:
#    tags:
#      - 'v[0-9]+.[0-9]+.[0-9]+'

env:
  PYTHON_VERSION: '3.10'

permissions:
  contents: write

jobs:
  build:
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up GCC (Linux)
        if: runner.os == 'Linux'
        uses: egor-tensin/setup-gcc@v1
        with:
          version: latest
          platform: x64

      - name: Set up GCC (MinGW)
        if: runner.os == 'Windows'
        uses: egor-tensin/setup-mingw@v2
        with:
          platform: x64

      - name: Set up GCC (macOS)
        if: runner.os == 'macOS'
        uses: Dup4/actions-setup-gcc@v1
        with:
          version: latest

      - name: Install cmake
        uses: lukka/get-cmake@latest

      - name: Set up Poetry
        run: pipx install poetry

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'poetry'

      - name: Install Python dependencies
        run: poetry install --no-root

      - name: Build archives
        run: poetry build

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: artifact-dist
          path: dist/*

  publish:
    runs-on: ubuntu-latest
    needs: [ build ]

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: artifact-dist
          path: dist

#      - name: Publish distribution ðŸ“¦ to Test PyPI
#        uses: pypa/gh-action-pypi-publish@release/v1
#        with:
#          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
#          repository-url: https://test.pypi.org/legacy/

      - name: Publish distribution ðŸ“¦ to PyPI
        if: github.event_name == 'release' && github.event.release.target_commitish == 'main'
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}

  cleanup:
    runs-on: ubuntu-latest
    if: always()
    needs: publish
    steps:
      - name: Delete artifacts
        uses: geekyeggo/delete-artifact@v2
        with:
          failOnError: false
          name: |
            artifact-*
